{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","start","setState","reverse","sortByAlphabet","ALPABET","sortByLength","LENGTH","reset","this","formattedGoodList","goods","visibleGoods","sort","a","b","localeCompare","length","Error","getReorderedGoods","map","good","name","id","uuidv4","className","onClick","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAqBKA,E,0FAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,MAAQ,WACN,EAAKC,SAAS,CAAEL,WAAW,KAR/B,EAWEM,QAAU,kBAAM,EAAKD,UAAS,SAACN,GAAD,MAAY,CAAEE,YAAaF,EAAME,gBAXjE,EAaEM,eAAiB,kBAAM,EAAKF,SAAS,CAAEH,SAAUN,EAASY,WAb5D,EAeEC,aAAe,kBAAM,EAAKJ,SAAS,CAAEH,SAAUN,EAASc,UAf1D,EAiBEC,MAAQ,WACN,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASO,QApBzB,4CAwBE,WAAU,IAAD,OACCH,EAAcY,KAAKb,MAAnBC,UAQFa,EArEV,SACEC,EACAZ,EACAD,GAGA,IAAMc,EAAY,YAAOD,GAGzB,OAAQZ,GACN,KAAKN,EAASY,QACZO,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKtB,EAASc,OACZK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACzC,MACF,KAAKxB,EAASO,KAGZ,MAEF,QACE,MAAM,IAAIkB,MAAJ,eAAkBnB,EAAlB,eAGV,OAAOD,EAAac,EAAaT,UAAYS,EAsC1BO,CACfzB,EACAe,KAAKb,MAAMG,SACXU,KAAKb,MAAME,YAGsBsB,KAAI,SAACC,GAAD,MAAW,CAChDC,KAAMD,EACNE,GAAIC,kBAGN,OACE,qBAAKC,UAAU,sCAAf,SACG5B,EACC,sBAAK4B,UAAU,qCAAf,UACE,wBACEC,QAASjB,KAAKL,eACdqB,UAAU,+SACVE,KAAK,SAHP,iCAOA,wBACED,QAASjB,KAAKH,aACdmB,UAAU,+SACVE,KAAK,SAHP,4BAOA,wBACED,QAASjB,KAAKN,QACdsB,UAAU,+SACVE,KAAK,SAHP,qBAOA,wBACED,QAASjB,KAAKD,MACdiB,UAAU,+SACVE,KAAK,SAHP,mBAOA,oBAAIF,UAAU,mBAAd,SACGf,EAAkBU,KAAI,gBAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACrB,oBAEEE,UAAU,iDAFZ,SAIGH,GAHIC,WASb,wBACEG,QAAS,kBAAM,EAAKzB,SACpBwB,UAAU,6VACVE,KAAK,SAHP,SAKE,sBAAMF,UAAU,8HAAhB,2BAvFZ,GAAyBG,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.31cda5ad.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      visibleGoods;\n      break;\n\n    default:\n      throw new Error(`Case ${sortType} not found`);\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean;\n  isReversed: boolean;\n  sortType: SortType;\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  reverse = () => this.setState((state) => ({ isReversed: !state.isReversed }));\n\n  sortByAlphabet = () => this.setState({ sortType: SortType.ALPABET });\n\n  sortByLength = () => this.setState({ sortType: SortType.LENGTH });\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isStarted } = this.state;\n\n    const goodList = getReorderedGoods(\n      goodsFromServer,\n      this.state.sortType,\n      this.state.isReversed,\n    );\n\n    const formattedGoodList = goodList.map((good) => ({\n      name: good,\n      id: uuidv4(),\n    }));\n\n    return (\n      <div className=\"App font-mono bg-stone-800 h-screen\">\n        {isStarted ? (\n          <div className=\"container mx-auto p-35 text-center\">\n            <button\n              onClick={this.sortByAlphabet}\n              className=\"text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800 shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n              type=\"button\"\n            >\n              Sort alphabetically\n            </button>\n            <button\n              onClick={this.sortByLength}\n              className=\"text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800 shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n              type=\"button\"\n            >\n              Sort by length\n            </button>\n            <button\n              onClick={this.reverse}\n              className=\"text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800 shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n              type=\"button\"\n            >\n              Reverse\n            </button>\n            <button\n              onClick={this.reset}\n              className=\"text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800 shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n              type=\"button\"\n            >\n              Reset\n            </button>\n            <ul className=\"Goods space-y-35\">\n              {formattedGoodList.map(({ name, id }) => (\n                <li\n                  key={id}\n                  className=\"Goods__item hover:underline text-white text-xl\"\n                >\n                  {name}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <button\n            onClick={() => this.start()}\n            className=\"relative button inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-pink-500 to-orange-400 group-hover:from-pink-500 group-hover:to-orange-400 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800\"\n            type=\"button\"\n          >\n            <span className=\"px-5 py-2.5 transition-all ease-in duration-75 bg-stone-800 dark:bg-gray-900 rounded-md group-hover:bg-opacity-0 text-white\">\n              Start\n            </span>\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}